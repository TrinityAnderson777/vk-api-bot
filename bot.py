import vk_api
import time
import sys
import random

import colorama
colorama.init()

def print_box(title, content_lines):
    max_length = max(len(line) for line in content_lines + [title])
    border = '‚ïê' * (max_length + 4)
    colors = [
        '',             # –±–µ–∑ —Ü–≤–µ—Ç–∞
        '\033[91m',     # –∫—Ä–∞—Å–Ω—ã–π
        '\033[93m',     # –∂–µ–ª—Ç—ã–π
        '\033[92m',     # –∑–µ–ª–µ–Ω—ã–π
        '\033[94m',     # —Å–∏–Ω–∏–π
        '\033[95m',     # —Ñ–∏–æ–ª–µ—Ç–æ–≤—ã–π
        '\033[96m',     # –≥–æ–ª—É–±–æ–π
        '\033[97m',     # –±–µ–ª—ã–π
    ]
    color = random.choice(colors)
    endc = '\033[0m' if color else ''

    print(f"{color}‚ïî{border}‚ïó{endc}")
    print(f"{color}‚ïë  {title.center(max_length)}  ‚ïë{endc}")
    print(f"{color}‚ï†{border}‚ï£{endc}")
    for line in content_lines:
        print(f"{color}‚ïë  {line.ljust(max_length)}  ‚ïë{endc}")
    print(f"{color}‚ïö{border}‚ïù{endc}\n")

def –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å_–≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ(desc):
    print_box("–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ", [
        f"–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –≤—ã–ø–æ–ª–Ω–∏—Ç—å: {desc}?",
        "1 - –î–∞",
        "0 - –ù–µ—Ç"
    ])
    while True:
        resp = input("–í–≤–µ–¥–∏—Ç–µ 1 –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –∏–ª–∏ 0 –¥–ª—è –æ—Ç–º–µ–Ω—ã: ").strip()
        if resp == '1':
            return True
        if resp == '0':
            return False
        print("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ 1 –∏–ª–∏ 0.")

# –í–Ω–∞—á–∞–ª–µ –≤—ã–≤–æ–¥–∏–º —Ä–∞–º–∫—É –æ–¥–∏–Ω —Ä–∞–∑
print_box("–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ VK –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ç–æ—Ä", [])

# –í–≤–æ–¥ —Ç–æ–∫–µ–Ω–∞
token = input("–í–≤–µ–¥–∏—Ç–µ –≤–∞—à —Ç–æ–∫–µ–Ω –¥–æ—Å—Ç—É–ø–∞: ")

# –°–æ–∑–¥–∞–µ–º —Å–µ—Å—Å–∏—é
try:
    vk_session = vk_api.VkApi(token=token)
    vk = vk_session.get_api()
except Exception as e:
    print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —Å–µ—Å—Å–∏–∏: {e}")
    sys.exit(1)

def —É–¥–∞–ª–∏—Ç—å_–∏—Å—Ö–æ–¥—è—â–∏–µ_–∑–∞—è–≤–∫–∏():
    print_box("–£–¥–∞–ª–µ–Ω–∏–µ –∏—Å—Ö–æ–¥—è—â–∏—Ö –∑–∞—è–≤–æ–∫", [])
    try:
        requests = vk.friends.getRequests(out=1, need_viewed=0, suggested=0, count=1000)
        count_requests = requests['count']
        print(f"–ù–∞–π–¥–µ–Ω–æ –∏—Å—Ö–æ–¥—è—â–∏—Ö –∑–∞—è–≤–æ–∫: {count_requests}")
        for user_id in requests['items']:
            try:
                print(f"üîÑ –£–¥–∞–ª—è—é –∑–∞—è–≤–∫—É –Ω–∞ user_id: {user_id}")
                vk.friends.delete(user_id=user_id)
                print(f"‚úîÔ∏è –ó–∞—è–≤–∫–∞ –Ω–∞ {user_id} —É–¥–∞–ª–µ–Ω–∞")
                time.sleep(1)
            except vk_api.exceptions.ApiError as e:
                print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ {user_id}: {e}")
            except Exception as e:
                print(f"‚ùì –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞ –Ω–∞ {user_id}: {e}")
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∑–∞—è–≤–æ–∫: {e}")
    print()

def –¥–æ–±–∞–≤–∏—Ç—å_–¥—Ä—É–∑–µ–π():
    print_box("–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –¥—Ä—É–∑–µ–π –∏–∑ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π", [])
    try:
        suggestions = vk.friends.getSuggestions()
        print(f"–ü–æ–ª—É—á–µ–Ω–æ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π: {suggestions['count']}")
        print("–ò–º–µ–Ω–∞ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω—ã—Ö –¥—Ä—É–∑–µ–π:")
        if 'items' in suggestions:
            items = suggestions['items']
        else:
            items = suggestions
        if isinstance(items, list) and items and isinstance(items[0], dict):
            for user in items:
                print(f"{user['first_name']} {user['last_name']}")
        else:
            for name in items:
                print(name)
        for user in items:
            if isinstance(user, dict):
                user_id = user['id']
                try:
                    print(f"‚è≥ –ì–æ—Ç–æ–≤–ª—é—Å—å –¥–æ–±–∞–≤–∏—Ç—å {user['first_name']} {user['last_name']} (ID: {user_id})")
                    time.sleep(3)
                    vk.friends.add(user_id=user_id)
                    print(f"‚úîÔ∏è {user['first_name']} {user['last_name']} –¥–æ–±–∞–≤–ª–µ–Ω")
                except vk_api.exceptions.ApiError as e:
                    print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ {user['first_name']} {user['last_name']}: {e}")
                except Exception as e:
                    print(f"‚ùì –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ {user['first_name']} {user['last_name']}: {e}")
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π: {e}")
    print()

def –æ—Ç–ø–∏—Å–∞—Ç—å—Å—è_–æ—Ç_–≤—Å–µ—Ö_–≥—Ä—É–ø–ø():
    print_box("–û—Ç–ø–∏—Å—ã–≤–∞—é—Å—å –æ—Ç –≤—Å–µ—Ö –≥—Ä—É–ø–ø", [])
    try:
        offset = 0
        total = None
        all_group_ids = []
        while True:
            resp = vk.groups.get(offset=offset, count=200)
            items = resp.get('items', [])
            total = resp.get('count', total)
            if not items:
                break
            for g in items:
                if isinstance(g, int):
                    gid = g
                elif isinstance(g, dict):
                    gid = g.get('id')
                else:
                    gid = None
                if gid is not None:
                    all_group_ids.append(gid)
            if total is not None and offset + len(items) >= total:
                break
            offset += len(items)
            time.sleep(0.2)
        print(f"–ù–∞–π–¥–µ–Ω–æ –≥—Ä—É–ø–ø –¥–ª—è –æ—Ç–ø–∏—Å–∫–∏: {len(all_group_ids)}")
        for gid in all_group_ids:
            try:
                vk.groups.leave(group_id=gid)
                print(f"‚úîÔ∏è –ü–æ—Ç—Ä–µ–±–∏—Ç–µ–ª—å –æ—Ç–ø–∏—Å–∞–ª—Å—è –æ—Ç –≥—Ä—É–ø–ø—ã {gid}")
            except vk_api.exceptions.ApiError as e:
                print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø–∏—Å–∫–µ –æ—Ç {gid}: {e}")
            except Exception as e:
                print(f"‚ùì –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø–∏—Å–∫–µ –æ—Ç {gid}: {e}")
            time.sleep(0.5)
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å–ø–∏—Å–∫–æ–≤ –≥—Ä—É–ø–ø: {e}")
    print()

def —É–¥–∞–ª–∏—Ç—å_–≤—Å—é_–º—É–∑—ã–∫—É():
    print_box("–£–¥–∞–ª–µ–Ω–∏–µ –≤—Å–µ–π –º—É–∑—ã–∫–∏", [])
    try:
        my_id = vk.users.get()[0]['id']
        offset = 0
        while True:
            resp = vk.audio.get(owner_id=my_id, count=200, offset=offset)
            items = resp.get('items', [])
            if not items:
                break
            for a in items:
                aid = a.get('id')
                owner_id = a.get('owner_id', my_id)
                title = a.get('title', '')
                try:
                    vk.audio.delete(owner_id=owner_id, audio_id=aid)
                    print(f"‚úîÔ∏è –£–¥–∞–ª–µ–Ω–∞ –ø–µ—Å–Ω—è: {title} (ID: {aid})")
                except vk_api.exceptions.ApiError as e:
                    print(f"‚ùå –û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è '{title}' (ID: {aid}): {e}")
                except Exception as e:
                    print(f"‚ùì –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è '{title}' (ID: {aid}): {e}")
                time.sleep(0.2)
            offset += len(items)
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∞—É–¥–∏–æ: {e}")
    print()

def –ø–æ—Å—Ç–∞–≤–∏—Ç—å_–ª–∞–π–∫–∏_–≤_–ª–µ–Ω—Ç–µ_–≥—Ä—É–ø–ø—ã():
    print_box("–ü–æ—Å—Ç–∞–≤–∏—Ç—å –ª–∞–π–∫–∏ –≤ –ª–µ–Ω—Ç–µ –≥—Ä—É–ø–ø—ã", [])
    try:
        group_input = input("–í–≤–µ–¥–∏—Ç–µ URL –≥—Ä—É–ø–ø—ã VK –∏–ª–∏ —ç–∫—Ä–∞–Ω–Ω–æ–µ –∏–º—è (screen_name): ").strip()
        if not group_input:
            print("–ù–µ –≤–≤–µ–¥–µ–Ω–æ. –ü—Ä–µ—Ä—ã–≤–∞–Ω–∏–µ.")
            return

        screen_name = group_input
        if 'vk.com/' in group_input:
            screen_name = group_input.split('vk.com/')[-1].split('?')[0]

        resp = vk.utils.resolveScreenName(screen_name=screen_name)
        obj_type = resp.get('type')
        obj_id = resp.get('object_id')
        if obj_type not in ('group', 'public', 'page'):
            print(f"–£–∫–∞–∑–∞–Ω–Ω–∞—è —Å—Å—ã–ª–∫–∞ –æ—Ç–Ω–æ—Å–∏—Ç—Å—è –Ω–µ –∫ –≥—Ä—É–ø–ø–µ (type={obj_type}).")
            return

        group_id = obj_id
        owner_id = -group_id

        wall = vk.wall.get(owner_id=owner_id, count=100, filter='all')
        posts = wall.get('items', [])
        print(f"–ù–∞–π–¥–µ–Ω–æ –ø–æ—Å—Ç–æ–≤ –≤ –≥—Ä—É–ø–ø–µ: {len(posts)} (group_id={group_id})")

        for post in posts:
            post_id = post.get('id')
            if post_id is None:
                continue
            try:
                vk.likes.add(type='post', owner_id=owner_id, item_id=post_id)
                print(f"üíô –õ–∞–π–∫ –ø–æ—Å—Ç–∞–≤–ª–µ–Ω: –ø–æ—Å—Ç {post_id} –≤ –≥—Ä—É–ø–ø–µ {group_id}")
                time.sleep(0.4)
            except vk_api.exceptions.ApiError as e:
                print(f"‚ùå –û—à–∏–±–∫–∞ –ª–∞–π–∫–∞ –ø–æ—Å—Ç–∞ {post_id}: {e}")
            except Exception as e:
                print(f"‚ùì –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞ –ª–∞–π–∫–∞ –ø–æ—Å—Ç–∞ {post_id}: {e}")
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –≥—Ä—É–ø–ø—ã: {e}")
    print()

def –ø–æ—Å—Ç–∞–≤–∏—Ç—å_–ª–∞–π–∫–∏_–Ω–∞_—Å—Ç—Ä–∞–Ω–∏—Ü–µ_–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è():
    print_box("–ü–æ—Å—Ç–∞–≤–∏—Ç—å –ª–∞–π–∫–∏ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è", [])
    user_input = input("–í–≤–µ–¥–∏—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ –ø—Ä–æ—Ñ–∏–ª—å –∏–ª–∏ –µ–≥–æ —ç–∫—Ä–∞–Ω–Ω–æ–µ –∏–º—è: ").strip()
    if not user_input:
        print("–ù–µ –≤–≤–µ–¥–µ–Ω–æ. –í–æ–∑–≤—Ä–∞—Ç –∫ –º–µ–Ω—é.")
        return
    if 'vk.com/' in user_input:
        sname = user_input.split('vk.com/')[-1].split('?')[0]
    else:
        sname = user_input

    try:
        resp = vk.utils.resolveScreenName(screen_name=sname)
        if not resp:
            print("–ù–µ —É–¥–∞–ª–æ—Å—å —Ä–∞–∑—Ä–µ—à–∏—Ç—å –ø—Ä–æ—Ñ–∏–ª—å. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –≤–≤–æ–¥.")
            return
        obj_type = resp.get('type')
        obj_id = resp.get('object_id')
        if obj_type != 'user':
            print(f"–£–∫–∞–∑–∞–Ω–Ω—ã–π –ø—Ä–æ—Ñ–∏–ª—å –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º (—Ç–∏–ø: {obj_type}).")
            return
        user_id = obj_id
        owner_id = user_id

        # –ü–æ–ª—É—á–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ –ø–æ—Å—Ç—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –Ω–∞–ø—Ä–∏–º–µ—Ä, 1-3
        posts = vk.wall.get(owner_id=owner_id, count=3)
        post_items = posts.get('items', [])
        if not post_items:
            print("–ü–æ—Å—Ç–æ–≤ –Ω–∞ —Å—Ç–µ–Ω–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ—Ç.")
            return
        for post in post_items:
            post_id = post['id']
            try:
                vk.likes.add(type='post', owner_id=owner_id, item_id=post_id)
                print(f"üíô –õ–∞–π–∫ –ø–æ—Å—Ç–∞–≤–ª–µ–Ω –Ω–∞ –ø–æ—Å—Ç {post_id} —ç—Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.")
                time.sleep(0.5)
            except vk_api.exceptions.ApiError as e:
                print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ª–∞–π–∫–µ –ø–æ—Å—Ç–∞ {post_id}: {e}")
            except Exception as e:
                print(f"–ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ª–∞–π–∫–µ –ø–æ—Å—Ç–∞ {post_id}: {e}")
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {e}")

# -- –í–µ—Å—å –ø—Ä–µ–¥—ã–¥—É—â–∏–π –∫–æ–¥ --

def —É–±—Ä–∞—Ç—å_–ª–∞–π–∫–∏_—Å_–≥—Ä—É–ø–ø—ã():
    print_box("–£–±—Ä–∞—Ç—å –ª–∞–π–∫–∏ —Å –ø–æ—Å—Ç–æ–≤ –≥—Ä—É–ø–ø—ã", [])
    try:
        group_input = input("–í–≤–µ–¥–∏—Ç–µ URL –≥—Ä—É–ø–ø—ã VK –∏–ª–∏ —ç–∫—Ä–∞–Ω–Ω–æ–µ –∏–º—è: ").strip()
        if not group_input:
            print("–ù–µ –≤–≤–µ–¥–µ–Ω–æ. –í–æ–∑–≤—Ä–∞—Ç –∫ –º–µ–Ω—é.")
            return
        if 'vk.com/' in group_input:
            sname = group_input.split('vk.com/')[-1].split('?')[0]
        else:
            sname = group_input
        resp = vk.utils.resolveScreenName(screen_name=sname)
        if not resp:
            print("–ù–µ —É–¥–∞–ª–æ—Å—å —Ä–∞–∑—Ä–µ—à–∏—Ç—å –≥—Ä—É–ø–ø—É.")
            return
        if resp.get('type') not in ('group', 'public', 'page'):
            print("–£–∫–∞–∑–∞–Ω–æ –Ω–µ –≥—Ä—É–ø–ø–∞.")
            return
        group_id = resp.get('object_id')
        owner_id = -group_id
        posts = vk.wall.get(owner_id=owner_id, count=100)
        for post in posts.get('items', []):
            post_id = post['id']
            try:
                vk.likes.delete(type='post', owner_id=owner_id, item_id=post_id)
                print(f"‚úîÔ∏è –£–±—Ä–∞–Ω –ª–∞–π–∫ —Å –ø–æ—Å—Ç–∞ {post_id}")
                time.sleep(0.4)
            except vk_api.exceptions.ApiError as e:
                print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –ª–∞–π–∫–∞ —Å –ø–æ—Å—Ç–∞ {post_id}: {e}")
            except Exception as e:
                print(f"–ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –ª–∞–π–∫–∞ —Å –ø–æ—Å—Ç–∞ {post_id}: {e}")
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞: {e}")

def —É–±—Ä–∞—Ç—å_–ª–∞–π–∫–∏_—Å_—Å—Ç—Ä–∞–Ω–∏—Ü—ã_–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è():
    print_box("–£–±—Ä–∞—Ç—å –ª–∞–π–∫–∏ —Å –ø–æ—Å—Ç–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è", [])
    user_input = input("–í–≤–µ–¥–∏—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ –ø—Ä–æ—Ñ–∏–ª—å –∏–ª–∏ –µ–≥–æ —ç–∫—Ä–∞–Ω–Ω–æ–µ –∏–º—è: ").strip()
    if not user_input:
        print("–ù–µ –≤–≤–µ–¥–µ–Ω–æ. –í–æ–∑–≤—Ä–∞—Ç –∫ –º–µ–Ω—é.")
        return
    if 'vk.com/' in user_input:
        sname = user_input.split('vk.com/')[-1].split('?')[0]
    else:
        sname = user_input
    try:
        resp = vk.utils.resolveScreenName(screen_name=sname)
        if not resp:
            print("–ù–µ —É–¥–∞–ª–æ—Å—å —Ä–∞–∑—Ä–µ—à–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.")
            return
        if resp.get('type') != 'user':
            print(f"–≠—Ç–æ –Ω–µ –ø—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (—Ç–∏–ø: {resp.get('type')}).")
            return
        user_id = resp.get('object_id')
        owner_id = user_id
        posts = vk.wall.get(owner_id=owner_id, count=3)
        for post in posts.get('items', []):
            post_id = post['id']
            try:
                vk.likes.delete(type='post', owner_id=owner_id, item_id=post_id)
                print(f"‚úîÔ∏è –£–±—Ä–∞–Ω –ª–∞–π–∫ —Å –ø–æ—Å—Ç–∞ {post_id}")
                time.sleep(0.4)
            except vk_api.exceptions.ApiError as e:
                print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –ª–∞–π–∫–∞ —Å –ø–æ—Å—Ç–∞ {post_id}: {e}")
            except Exception as e:
                print(f"–ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –ª–∞–π–∫–∞ —Å –ø–æ—Å—Ç–∞ {post_id}: {e}")
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞: {e}")

# –û–±–Ω–æ–≤–ª—è–µ–º –º–µ–Ω—é –∏ —Ü–∏–∫–ª
def –≥–ª–∞–≤–Ω–æ–µ_–º–µ–Ω—é():
    print("–ß—Ç–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ —Å–¥–µ–ª–∞—Ç—å?")
    print("1 - –£–¥–∞–ª–∏—Ç—å –∏—Å—Ö–æ–¥—è—â–∏–µ –∑–∞—è–≤–∫–∏")
    print("2 - –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∏–º–µ–Ω–∞ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω—ã—Ö –¥—Ä—É–∑–µ–π –∏ –¥–æ–±–∞–≤–∏—Ç—å –∏—Ö")
    print("3 - –û—Ç–ø–∏—Å–∞—Ç—å—Å—è –æ—Ç –≤—Å–µ—Ö –≥—Ä—É–ø–ø")
    print("4 - –£–¥–∞–ª–∏—Ç—å –≤—Å—é –º—É–∑—ã–∫—É")
    print("5 - –ü–æ—Å—Ç–∞–≤–∏—Ç—å –ª–∞–π–∫–∏ –≤ –ª–µ–Ω—Ç–µ –≥—Ä—É–ø–ø—ã")
    print("6 - –ü–æ—Å—Ç–∞–≤–∏—Ç—å –ª–∞–π–∫–∏ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")
    print("7 - –£–±—Ä–∞—Ç—å –ª–∞–π–∫–∏ —Å –ø–æ—Å—Ç–æ–≤ –≥—Ä—É–ø–ø—ã")
    print("8 - –£–±—Ä–∞—Ç—å –ª–∞–π–∫–∏ —Å –ø–æ—Å—Ç–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")
    print("0 - –í—ã—Ö–æ–¥")
    choice = input("–í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ (0-8): ").strip()
    return choice

# –¶–∏–∫–ª
while True:
    try:
        choice = –≥–ª–∞–≤–Ω–æ–µ_–º–µ–Ω—é()
        if choice == '1':
            if –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å_–≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ("–£–¥–∞–ª–µ–Ω–∏–µ –∏—Å—Ö–æ–¥—è—â–∏—Ö –∑–∞—è–≤–æ–∫"):
                —É–¥–∞–ª–∏—Ç—å_–∏—Å—Ö–æ–¥—è—â–∏–µ_–∑–∞—è–≤–∫–∏()
            else:
                print_box("–û—Ç–º–µ–Ω–∞", ["–û–ø–µ—Ä–∞—Ü–∏—è –æ—Ç–º–µ–Ω–µ–Ω–∞."])
        elif choice == '2':
            if –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å_–≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ("–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –¥—Ä—É–∑–µ–π –∏–∑ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π"):
                –¥–æ–±–∞–≤–∏—Ç—å_–¥—Ä—É–∑–µ–π()
            else:
                print_box("–û—Ç–º–µ–Ω–∞", ["–û–ø–µ—Ä–∞—Ü–∏—è –æ—Ç–º–µ–Ω–µ–Ω–∞."])
        elif choice == '3':
            if –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å_–≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ("–û—Ç–ø–∏—Å–∞—Ç—å—Å—è –æ—Ç –≤—Å–µ—Ö –≥—Ä—É–ø–ø"):
                –æ—Ç–ø–∏—Å–∞—Ç—å—Å—è_–æ—Ç_–≤—Å–µ—Ö_–≥—Ä—É–ø–ø()
            else:
                print_box("–û—Ç–º–µ–Ω–∞", ["–û–ø–µ—Ä–∞—Ü–∏—è –æ—Ç–º–µ–Ω–µ–Ω–∞."])
        elif choice == '4':
            if –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å_–≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ("–£–¥–∞–ª–∏—Ç—å –≤—Å—é –º—É–∑—ã–∫—É"):
                —É–¥–∞–ª–∏—Ç—å_–≤—Å—é_–º—É–∑—ã–∫—É()
            else:
                print_box("–û—Ç–º–µ–Ω–∞", ["–û–ø–µ—Ä–∞—Ü–∏—è –æ—Ç–º–µ–Ω–µ–Ω–∞."])
        elif choice == '5':
            if –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å_–≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ("–ü–æ—Å—Ç–∞–≤–∏—Ç—å –ª–∞–π–∫–∏ –≤ –ª–µ–Ω—Ç–µ –≥—Ä—É–ø–ø—ã"):
                –ø–æ—Å—Ç–∞–≤–∏—Ç—å_–ª–∞–π–∫–∏_–≤_–ª–µ–Ω—Ç–µ_–≥—Ä—É–ø–ø—ã()
            else:
                print_box("–û—Ç–º–µ–Ω–∞", ["–û–ø–µ—Ä–∞—Ü–∏—è –æ—Ç–º–µ–Ω–µ–Ω–∞."])
        elif choice == '6':
            if –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å_–≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ("–ü–æ—Å—Ç–∞–≤–∏—Ç—å –ª–∞–π–∫–∏ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"):
                –ø–æ—Å—Ç–∞–≤–∏—Ç—å_–ª–∞–π–∫–∏_–Ω–∞_—Å—Ç—Ä–∞–Ω–∏—Ü–µ_–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è()
            else:
                print_box("–û—Ç–º–µ–Ω–∞", ["–û–ø–µ—Ä–∞—Ü–∏—è –æ—Ç–º–µ–Ω–µ–Ω–∞."])
        elif choice == '7':
            if –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å_–≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ("–£–±—Ä–∞—Ç—å –ª–∞–π–∫–∏ —Å –ø–æ—Å—Ç–æ–≤ –≥—Ä—É–ø–ø—ã"):
                —É–±—Ä–∞—Ç—å_–ª–∞–π–∫–∏_—Å_–≥—Ä—É–ø–ø—ã()
            else:
                print_box("–û—Ç–º–µ–Ω–∞", ["–û–ø–µ—Ä–∞—Ü–∏—è –æ—Ç–º–µ–Ω–µ–Ω–∞."])
        elif choice == '8':
            if –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å_–≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ("–£–±—Ä–∞—Ç—å –ª–∞–π–∫–∏ —Å –ø–æ—Å—Ç–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"):
                —É–±—Ä–∞—Ç—å_–ª–∞–π–∫–∏_—Å_—Å—Ç—Ä–∞–Ω–∏—Ü—ã_–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è()
            else:
                print_box("–û—Ç–º–µ–Ω–∞", ["–û–ø–µ—Ä–∞—Ü–∏—è –æ—Ç–º–µ–Ω–µ–Ω–∞."])
        elif choice == '0':
            print("–í—ã—Ö–æ–¥. –î–æ —Å–≤–∏–¥–∞–Ω–∏—è.")
            break
        else:
            print("–ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.")
        print()
    except KeyboardInterrupt:
        print("\n–ü—Ä–µ—Ä—ã–≤–∞–Ω–∏–µ. –í—ã—Ö–æ–¥.")
        break